<MusicBox@MDFloatLayout>
    id: music_box
    adaptive_size: True
    spacing: "12dp"
    pos_hint: {"center_x": .1}
    size_hint: 1, .1

    AsyncImageButton
        id: cover_art
        source: app.main_page.ids.cover_art.source
        allow_stretch: True
        size_hint: .2, 1
        on_release:
            app.nav_drawer_list.set_color_item(app.nav_drawer_list.parent.parent.ids.music_player_page)
            app.screen_manager.current = "main_page"
    ProgressBox:
        id: progress_box
        size_hint: None, None
        size: music_box.width - dp(24), music_box.height
        md_bg_color: (.87, .87, .87, 1) if app.theme_cls.theme_style == 'Light' else (.1, .1, .1, 1)
        radius: music_box.radius
        opacity: 1
        x: cover_art.size[0] + cover_art.pos[0]
        padding: "10dp", "12dp", "12dp", "16dp"
    ImageButton:
        id: play_button
        allow_stretch: True
        ripple_scale: 0
        size_hint: None, None
        size: sp(20), sp(20)
        source: app.play_button.source
        pos_hint: {"center_y": .5}
        x: Window.size[0] - dp(100)
        on_release: app.play_button.control(self)
    ImageButton:
        id: next_button
        allow_stretch: True
        ripple_scale: 0
        size_hint: None, None
        size: sp(20), sp(20)
        source: "images/next_light.png" if app.theme_cls.theme_style == 'Light' else "images/next_dark.png"
        pos_hint: {"center_y": .5}
        x: Window.size[0] - dp(50)
        on_release: app.play_button.play_next(self)
    MDProgressBar:
        id: progress_bar
        min: 0
        value: app.main_page.playback_slider.value
        max: app.main_page.playback_slider.max
        size_hint: .8, 1
        pos_hint: {"center_x": 1, "center_y": .05}

<ImageButton@ButtonBehavior+Image>
<AsyncImageButton@ButtonBehavior+AsyncImage>

<ProgressBox@MDBoxLayout>
    orientation: "vertical"

    MDLabel:
        id: song_name
        text: app.main_page.ids.title.text
        bold: True

    Widget:
        size_hint_y: None
        height: "12dp"

    MDLabel:
        id: song_artist
        text: app.main_page.ids.artist.text
        font_style: "Caption"

    Widget:
        size_hint_y: None
        height: "15dp"

    MDLabel:
        id: song_seconds
        text: app.main_page.ids.track_current.text
        font_style: "Caption"
        theme_text_color: "Custom"
        text_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.primary_light

<ScaleLabel@MDLabel>:
    text_size: self.width, None
    _scale: 1. if self.texture_size[1] < self.height else float(self.height) / self.texture_size[1]
    canvas.before:
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
    canvas.after:
        PopMatrix
