#:import rgba kivy.utils.get_color_from_hex
#: include kv/start_page.kv
#: include kv/favorites_page.kv
#: include kv/settings_page.kv
#: import toast kivymd.toast.toast
<ScaleLabel@MDLabel>:
    text_size: self.width, None
    _scale: 1. if self.texture_size[1] < self.height else float(self.height) / self.texture_size[1]
    canvas.before:
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
    canvas.after:
        PopMatrix

<PlaylistSongItem>

    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width - dp(80)
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)


<ItemDrawer>:
    theme_text_color: "Custom"
    text_color:
        app.theme_cls.text_color if app.theme_cls.theme_style != 'Dark' else (1, 1, 1, 0.87)

    IconLeftWidget:
        id: icon
        icon: root.icon
        theme_text_color: "Custom"
        text_color: root.text_color

<ContentNavigationDrawer>:
    orientation: "vertical"
    padding: "8dp"
    spacing: "8dp"

    AnchorLayout:
        anchor_x: "left"
        size_hint_y: None
        height: avatar.height

        Image:
            id: avatar
            size_hint: None, None
            size: "56dp", "56dp"
            source: "images/icon.png"

    MDLabel:
        text: "GeniusT Music Player"
        font_style: "Button"
        size_hint_y: None
        height: self.texture_size[1]

    MDLabel:
        text: "t.me/genius_the_bot"
        font_style: "Caption"
        size_hint_y: None
        height: self.texture_size[1]


    ScrollView:

        DrawerList:
            id: nav_drawer_list

            ItemDrawer:
                text: "Music Player"
                text_color:
                    app.theme_cls.primary_color if app.theme_cls.theme_style != 'Dark' else app.theme_cls.primary_light
                icon: 'headphones'
                on_release:
                    root.nav_drawer.set_state("close")
                    self.parent.set_color_item(self)
                    app.screen_manager.current = "main_page"

            ItemDrawer:
                text: "Favorites"
                text_color:
                    app.theme_cls.text_color if app.theme_cls.theme_style != 'Dark' else (1, 1, 1, 0.87)
                icon: 'playlist-star'
                on_release:
                    root.nav_drawer.set_state("close")
                    self.parent.set_color_item(self)
                    app.favorites_page.set_songs()
                    app.screen_manager.current = "favorites_page"

            ItemDrawer:
                text: "Settings"
                text_color:
                    self.theme_cls.text_color if app.theme_cls.theme_style != 'Dark' else (1, 1, 1, 0.87)
                icon: 'tools'
                on_release:
                    root.nav_drawer.set_state("close")
                    self.parent.set_color_item(self)
                    app.screen_manager.current = "settings_page"

# ----------------- Main Page -----------------
# Menu Drawer
<NavLayout@MDNavigationLayout>:
    screen_manager: screen_manager
    nav_drawer: nav_drawer

    ScreenManager:
        id: screen_manager

    MDNavigationDrawer:
        elevation: 0
        id: nav_drawer

        ContentNavigationDrawer:
            screen_manager: screen_manager
            nav_drawer: nav_drawer

<MainPage>:
    playback_slider: playback_slider
    play_button: play_button
    favorite_button: favorite_button
    volume_slider: volume_slider
    download_button: download_button
    song: None

    # Drawer
    MDIconButton:
        id: drawer_button
        icon: 'view-headline'
        user_font_size: '30sp'
        pos_hint: {'center_x': 0.05, 'center_y': 0.92}
        on_release: app.nav_drawer.set_state("open")


    # Song Artist and Title
    ScaleLabel:
        id: title
        text: ''
        pos_hint: {'center_x': .5, 'center_y': 0.95}
        font_style: "H5"
        halign: "center"
    ScaleLabel:
        id: artist
        text: ''
        pos_hint: {'center_x': .5, 'center_y': 0.90}
        font_style: "Subtitle1"
        halign: "center"

    # Download
    MDIconButton:
        id: download_button
        icon: 'download'
        user_font_size: '30sp'
        theme_text_color: "Custom"
        text_color: 
            app.theme_cls.icon_color if app.song and (app.song.song_object.download_url or app.song.song_object.isrc) else app.theme_cls.disabled_hint_text_color
        ripple_scale: 0
        pos_hint: {'center_x': 0.9, 'center_y': 0.92}
        on_release:
            root.download_song(app.song.song_object) if app.song.song_object.download_url or app.song.song_object.isrc else toast('Download unavailable.')

    # Volume
    MDIconButton:
        pos_hint: {'center_y': 0.85}
        pos: volume_slider.pos[0] - dp(35), self.pos[1]
        icon: "volume-medium" if volume_slider.value != 0 else "volume-mute"
        on_release: volume_slider.value = 0.0 if volume_slider.value != 0 else volume_slider.last_value
    VolumeSlider:
        id: volume_slider
        size_hint: 0.8, 0.15
        pos_hint: {'center_x': 0.5, 'center_y': 0.85}
    MDIcon:
        pos_hint: {'center_y': 0.85}
        pos: volume_slider.pos[0] + volume_slider.size[0] - 6, self.pos[1]
        icon: "volume-high"

    # Cover Art
    AsyncImage:
        id: cover_art
        source: 'images/empty_coverart.png'
        pos_hint: {'center_x': .5, 'center_y': 0.55}
        size_hint_y: 0.5
        anim_delay: 0
        allow_stretch: True
        size: root.size[0], root.size[1]

    # Playback Slider
    MDLabel:
        id: track_current
        text: '0:00'
        size_hint: 0.1, None
        pos_hint: {'center_y': 0.25}
        pos: root.playback_slider.pos[0] - dp(30), self.pos[1]
    PlaybackSlider:
        id: playback_slider
    MDLabel:
        id: track_length
        text: ''
        size_hint: 0.1, None
        pos_hint: {'center_y': 0.25}
        pos: root.playback_slider.pos[0] + root.playback_slider.size[0], self.pos[1]

    # Playlist
    ImageButton:
        id: playlist_button
        allow_stretch: True
        size_hint: None, None
        size: sp(20), sp(20)
        source: "images/playlist_light.png" if app.theme_cls.theme_style == 'Light' else "images/playlist_dark.png"
        pos_hint: {'center_x': 0.1, 'center_y': 0.1}
        on_release:
            root.update_playlist_menu()
            root.playlist_menu.open()

    # Playback Controls
    # MDBoxLayout:
    #    adaptive_size: True
    #    spacing: "5dp"
    #    pos_hint: {"center_x": .5, "center_y": .1}

    ImageButton:
        id: previous_button
        allow_stretch: True
        ripple_scale: 0
        size_hint: None, None
        size: sp(20), sp(20)
        source: "images/previous_light.png" if app.theme_cls.theme_style == 'Light' else "images/previous_dark.png"
        on_release: play_button.play_previous(self)
        pos_hint: {"center_x": .3, "center_y": .1}
    PlayButton:
        id: play_button
        allow_stretch: True
        ripple_scale: 0
        size_hint: None, None
        size: sp(30), sp(30)
        source: "images/play_light.png" if app.theme_cls.theme_style == 'Light' else "images/play_dark.png"
        pos_hint: {"center_x": .5, "center_y": .1}
    ImageButton:
        id: next_button
        allow_stretch: True
        ripple_scale: 0
        size_hint: None, None
        size: sp(20), sp(20)
        source: "images/next_light.png" if app.theme_cls.theme_style == 'Light' else "images/next_dark.png"
        pos_hint: {"center_x": .7, "center_y": .1}
        on_release: play_button.play_next(self)
    FavoriteButton:
        id: favorite_button
        size_hint: None, None
        user_font_size: '35sp'
        pos_hint: {'center_x': 0.9, 'center_y': 0.1}
        theme_text_color: "Custom"
        text_color: rgba('#ff0000') if app.theme_cls.theme_style == 'Light' else rgba('#cc0000')

<PlaybackSlider>:
    min: 0
    value: 0
    hint: True
    size_hint: 0.8, None
    pos_hint: {'center_x': 0.5, 'center_y': 0.25}

<VolumeSlider>:
    min: 0
    max: 100
    value: app.volume
    hint: False
    orientation: 'horizontal'

<ImageButton@ButtonBehavior+Image>

<PlaylistLayout@BoxLayout>:
    songs_grid: songs_grid
    orientation: "vertical"
    size_hint_y: None

    ScrollView:

        MDGridLayout:
            id: songs_grid
            cols: 1
            adaptive_height: True